import { ethers } from "ethers"


const FACTORY_ADDRESS = process.env.NEXT_PUBLIC_FACTORY_ADDRESS

export async function GET() {
    const factoryAbi = ["function getMarkets() public view returns (address[])", "function positions() public view returns (address)"]

    const provider = new ethers.JsonRpcProvider(process.env.RPC_URL)

    const contract = new ethers.Contract(FACTORY_ADDRESS, factoryAbi, provider)

    const marketPositionsAddress = await contract.positions()
    const marketPositionsContract = new ethers.Contract(marketPositionsAddress, '[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"approve","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"burn","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"counter","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"ctf","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IERC1155"}],"stateMutability":"view"},{"type":"function","name":"getApproved","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getPosition","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct MarketPositions.PositionInfo","components":[{"name":"outcomes","type":"tuple[]","internalType":"struct MarketPositions.PositionOutcomeInfo[]","components":[{"name":"outcome","type":"uint256","internalType":"uint256"},{"name":"principalAmount","type":"uint256","internalType":"uint256"}]},{"name":"market","type":"address","internalType":"contract Market"},{"name":"position","type":"address","internalType":"contract MarketPosition"}]}],"stateMutability":"view"},{"type":"function","name":"isApprovedForAll","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"mint","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"outcomes","type":"tuple[]","internalType":"struct MarketPositions.PositionOutcomeInfo[]","components":[{"name":"outcome","type":"uint256","internalType":"uint256"},{"name":"principalAmount","type":"uint256","internalType":"uint256"}]},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"tuple","internalType":"struct MarketPositions.PositionInfo","components":[{"name":"outcomes","type":"tuple[]","internalType":"struct MarketPositions.PositionOutcomeInfo[]","components":[{"name":"outcome","type":"uint256","internalType":"uint256"},{"name":"principalAmount","type":"uint256","internalType":"uint256"}]},{"name":"market","type":"address","internalType":"contract Market"},{"name":"position","type":"address","internalType":"contract MarketPosition"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"ownerOf","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"positions","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"market","type":"address","internalType":"contract Market"},{"name":"position","type":"address","internalType":"contract MarketPosition"}],"stateMutability":"view"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"tokenByIndex","inputs":[{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"tokenOfOwnerByIndex","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"tokenURI","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ApprovalForAll","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"Combo","inputs":[{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"market","type":"address","indexed":true,"internalType":"contract Market"},{"name":"comboId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"info","type":"tuple","indexed":false,"internalType":"struct MarketPositions.PositionInfo","components":[{"name":"outcomes","type":"tuple[]","internalType":"struct MarketPositions.PositionOutcomeInfo[]","components":[{"name":"outcome","type":"uint256","internalType":"uint256"},{"name":"principalAmount","type":"uint256","internalType":"uint256"}]},{"name":"market","type":"address","internalType":"contract Market"},{"name":"position","type":"address","internalType":"contract MarketPosition"}]}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}]', provider)
    const totalSupply = await marketPositionsContract.totalSupply()
    const positions = []
    for (let i = 1; i <= totalSupply; i++) {
        const position = await marketPositionsContract.getPosition(i)
        const outcomes = position.outcomes.map((outcome: any) => {
            return outcome.outcome.toString()
        });
        positions.push(outcomes)
    }

    return Response.json({ success: true, data: positions })
}